/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */
import type { UseMutationOptions, QueryClient } from "@tanstack/react-query";
import { useMutation } from "@tanstack/react-query";

import client from "../../../lib/fetch-client";
import type { RequestConfig, ResponseErrorConfig } from "../../../lib/fetch-client";
import type {
  DeleteApiCustomerLinksIdMutationResponse,
  DeleteApiCustomerLinksIdPathParams,
  DeleteApiCustomerLinksId400,
  DeleteApiCustomerLinksId404,
} from "../../types/Customer Link/DeleteApiCustomerLinksId";

export const deleteApiCustomerLinksIdMutationKey = () => [{ url: "/api/customer/links/{id}" }] as const;

export type DeleteApiCustomerLinksIdMutationKey = ReturnType<typeof deleteApiCustomerLinksIdMutationKey>;

/**
 * @summary Удалить ссылку по id
 * {@link /api/customer/links/:id}
 */
export async function deleteApiCustomerLinksId(
  id: DeleteApiCustomerLinksIdPathParams["id"],
  config: Partial<RequestConfig> & { client?: typeof client } = {},
) {
  const { client: request = client, ...requestConfig } = config;

  const res = await request<
    DeleteApiCustomerLinksIdMutationResponse,
    ResponseErrorConfig<DeleteApiCustomerLinksId400 | DeleteApiCustomerLinksId404>,
    unknown
  >({
    method: "DELETE",
    url: `/api/customer/links/${id}`,
    ...requestConfig,
  });
  return res.data;
}

/**
 * @summary Удалить ссылку по id
 * {@link /api/customer/links/:id}
 */
export function useDeleteApiCustomerLinksId<TContext>(
  options: {
    mutation?: UseMutationOptions<
      DeleteApiCustomerLinksIdMutationResponse,
      ResponseErrorConfig<DeleteApiCustomerLinksId400 | DeleteApiCustomerLinksId404>,
      { id: DeleteApiCustomerLinksIdPathParams["id"] },
      TContext
    > & { client?: QueryClient };
    client?: Partial<RequestConfig> & { client?: typeof client };
  } = {},
) {
  const { mutation = {}, client: config = {} } = options ?? {};
  const { client: queryClient, ...mutationOptions } = mutation;
  const mutationKey = mutationOptions.mutationKey ?? deleteApiCustomerLinksIdMutationKey();

  return useMutation<
    DeleteApiCustomerLinksIdMutationResponse,
    ResponseErrorConfig<DeleteApiCustomerLinksId400 | DeleteApiCustomerLinksId404>,
    { id: DeleteApiCustomerLinksIdPathParams["id"] },
    TContext
  >(
    {
      mutationFn: async ({ id }) => {
        return deleteApiCustomerLinksId(id, config);
      },
      mutationKey,
      ...mutationOptions,
    },
    queryClient,
  );
}
